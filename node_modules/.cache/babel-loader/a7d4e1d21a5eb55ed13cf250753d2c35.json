{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ankita/Documents/GitHub/homies/src/components/Launcher.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ChatWindow from './ChatWindow';\nimport launcherIcon from \"./../assets/logo-no-bg.svg\";\nimport incomingMessageSound from './../assets/sounds/notification.mp3';\nimport launcherIconActive from './../assets/close-icon.png';\n\nclass Launcher extends Component {\n  constructor() {\n    super();\n    this.state = {\n      launcherIcon,\n      isOpen: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.mute) {\n      return;\n    }\n\n    const nextMessage = nextProps.messageList[nextProps.messageList.length - 1];\n    const isIncoming = (nextMessage || {}).author === 'me';\n    const isNew = nextProps.messageList.length > this.props.messageList.length;\n\n    if (isIncoming && isNew) {\n      this.playIncomingMessageSound();\n    }\n  }\n\n  playIncomingMessageSound() {\n    var audio = new Audio(incomingMessageSound);\n    audio.play();\n  }\n\n  handleClick() {\n    if (this.props.handleClick !== undefined) {\n      this.props.handleClick();\n    } else {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }\n\n  render() {\n    const isOpen = this.props.hasOwnProperty('isOpen') ? this.props.isOpen : this.state.isOpen;\n    const classList = ['sc-launcher', isOpen ? 'opened' : ''];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sc-launcher\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classList.join(' '),\n        onClick: this.handleClick.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(MessageCount, {\n          count: this.props.newMessagesCount,\n          isOpen: isOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: 'sc-open-icon',\n          src: launcherIconActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: 'sc-closed-icon',\n          src: launcherIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n        messageList: this.props.messageList,\n        onUserInputSubmit: this.props.onMessageWasSent,\n        onFilesSelected: this.props.onFilesSelected,\n        agentProfile: this.props.agentProfile,\n        isOpen: isOpen,\n        onClose: this.handleClick.bind(this),\n        showEmoji: this.props.showEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MessageCount = props => {\n  if (props.count === 0 || props.isOpen === true) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'sc-new-messages-count',\n    children: props.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MessageCount;\nLauncher.propTypes = {\n  onMessageWasReceived: PropTypes.func,\n  onMessageWasSent: PropTypes.func,\n  newMessagesCount: PropTypes.number,\n  isOpen: PropTypes.bool,\n  handleClick: PropTypes.func,\n  messageList: PropTypes.arrayOf(PropTypes.object),\n  mute: PropTypes.bool,\n  showEmoji: PropTypes.bool\n};\nLauncher.defaultProps = {\n  newMessagesCount: 0,\n  showEmoji: true\n};\nexport default Launcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageCount\");","map":{"version":3,"sources":["/Users/ankita/Documents/GitHub/homies/src/components/Launcher.js"],"names":["PropTypes","React","Component","ChatWindow","incomingMessageSound","launcherIconActive","Launcher","constructor","state","launcherIcon","isOpen","componentWillReceiveProps","nextProps","props","mute","nextMessage","messageList","length","isIncoming","author","isNew","playIncomingMessageSound","audio","Audio","play","handleClick","undefined","setState","render","hasOwnProperty","classList","join","bind","newMessagesCount","onMessageWasSent","onFilesSelected","agentProfile","showEmoji","MessageCount","count","propTypes","onMessageWasReceived","func","number","bool","arrayOf","object","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ChatWindow from './ChatWindow';\nimport launcherIcon from './../assets/logo-no-bg.svg';\nimport incomingMessageSound from './../assets/sounds/notification.mp3';\nimport launcherIconActive from './../assets/close-icon.png';\n\nclass Launcher extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      launcherIcon,\n      isOpen: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.mute) { return; }\n    const nextMessage = nextProps.messageList[nextProps.messageList.length - 1];\n    const isIncoming = (nextMessage || {}).author === 'me';\n    const isNew = nextProps.messageList.length > this.props.messageList.length;\n    if (isIncoming && isNew) {\n      this.playIncomingMessageSound();\n    }\n  }\n\n  playIncomingMessageSound() {\n    var audio = new Audio(incomingMessageSound);\n    audio.play();\n  }\n\n  handleClick() {\n    if (this.props.handleClick !== undefined) {\n      this.props.handleClick();\n    } else {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    }\n  }\n  render() {\n    const isOpen = this.props.hasOwnProperty('isOpen') ? this.props.isOpen : this.state.isOpen;\n    const classList = [\n      'sc-launcher',\n      (isOpen ? 'opened' : ''),\n    ];\n    return (\n      <div id=\"sc-launcher\">\n        <div className={classList.join(' ')} onClick={this.handleClick.bind(this)}>\n          <MessageCount count={this.props.newMessagesCount} isOpen={isOpen} />\n          <img className={'sc-open-icon'} src={launcherIconActive} />\n          <img className={'sc-closed-icon'} src={launcherIcon} />\n        </div>\n        <ChatWindow\n          messageList={this.props.messageList}\n          onUserInputSubmit={this.props.onMessageWasSent}\n          onFilesSelected={this.props.onFilesSelected}\n          agentProfile={this.props.agentProfile}\n          isOpen={isOpen}\n          onClose={this.handleClick.bind(this)}\n          showEmoji={this.props.showEmoji}\n        />\n      </div>\n    );\n  }\n}\n\nconst MessageCount = (props) => {\n  if (props.count === 0 || props.isOpen === true) { return null; }\n  return (\n    <div className={'sc-new-messages-count'}>\n      {props.count}\n    </div>\n  );\n};\n\nLauncher.propTypes = {\n  onMessageWasReceived: PropTypes.func,\n  onMessageWasSent: PropTypes.func,\n  newMessagesCount: PropTypes.number,\n  isOpen: PropTypes.bool,\n  handleClick: PropTypes.func,\n  messageList: PropTypes.arrayOf(PropTypes.object),\n  mute: PropTypes.bool,\n  showEmoji: PropTypes.bool,\n};\n\nLauncher.defaultProps = {\n  newMessagesCount: 0,\n  showEmoji: true\n};\n\nexport default Launcher;\n"]},"metadata":{},"sourceType":"module"}