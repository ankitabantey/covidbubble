{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ankita/Documents/GitHub/homies/src/components/popups/PopupWindow.js\";\nimport React, { Component } from 'react';\n\nclass PopupWindow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.interceptLauncherClick = e => {\n      const {\n        isOpen\n      } = this.props;\n      const clickedOutside = !this.emojiPopup.contains(e.target) && isOpen;\n      clickedOutside && this.props.onClickedOutside(e);\n    };\n  }\n\n  componentDidMount() {\n    this.scLauncher = document.querySelector('#sc-launcher');\n    this.scLauncher.addEventListener('click', this.interceptLauncherClick);\n  }\n\n  componentWillUnmount() {\n    this.scLauncher.removeEventListener('click', this.interceptLauncherClick);\n  }\n\n  render() {\n    const {\n      isOpen,\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sc-popup-window\",\n      ref: e => this.emojiPopup = e,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sc-popup-window--cointainer ${isOpen ? '' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.props.onInputChange,\n          className: \"sc-popup-window--search\",\n          placeholder: \"Search emoji...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PopupWindow;","map":{"version":3,"sources":["/Users/ankita/Documents/GitHub/homies/src/components/popups/PopupWindow.js"],"names":["React","Component","PopupWindow","interceptLauncherClick","e","isOpen","props","clickedOutside","emojiPopup","contains","target","onClickedOutside","componentDidMount","scLauncher","document","querySelector","addEventListener","componentWillUnmount","removeEventListener","render","children","onInputChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAWlCE,sBAXkC,GAWRC,CAAD,IAAO;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACA,YAAMC,cAAc,GAAG,CAAC,KAAKC,UAAL,CAAgBC,QAAhB,CAAyBL,CAAC,CAACM,MAA3B,CAAD,IAAuCL,MAA9D;AACAE,MAAAA,cAAc,IAAI,KAAKD,KAAL,CAAWK,gBAAX,CAA4BP,CAA5B,CAAlB;AACD,KAfiC;AAAA;;AAElCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAlB;AACA,SAAKF,UAAL,CAAgBG,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKb,sBAA/C;AACD;;AAEDc,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,UAAL,CAAgBK,mBAAhB,CAAoC,OAApC,EAA6C,KAAKf,sBAAlD;AACD;;AAQDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,MAAF;AAAUe,MAAAA;AAAV,QAAuB,KAAKd,KAAlC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEF,CAAC,IAAI,KAAKI,UAAL,GAAkBJ,CAA7D;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,+BAA8BC,MAAM,GAAG,EAAH,GAAQ,QAAS,EAAtE;AAAA,gCACE;AACE,UAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWe,aADvB;AAEE,UAAA,SAAS,EAAC,yBAFZ;AAGE,UAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGD,QANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA/BiC;;AAkCpC,eAAelB,WAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass PopupWindow extends Component {\n\n  componentDidMount() {\n    this.scLauncher = document.querySelector('#sc-launcher');\n    this.scLauncher.addEventListener('click', this.interceptLauncherClick);\n  }\n\n  componentWillUnmount() {\n    this.scLauncher.removeEventListener('click', this.interceptLauncherClick);\n  }\n\n  interceptLauncherClick = (e) => {\n    const { isOpen } = this.props;\n    const clickedOutside = !this.emojiPopup.contains(e.target) && isOpen;\n    clickedOutside && this.props.onClickedOutside(e);\n  }\n\n  render() {\n    const { isOpen, children } = this.props;\n    return (\n      <div className=\"sc-popup-window\" ref={e => this.emojiPopup = e}>\n        <div className={`sc-popup-window--cointainer ${isOpen ? '' : 'closed'}`}>\n          <input\n            onChange={this.props.onInputChange}\n            className=\"sc-popup-window--search\"\n            placeholder=\"Search emoji...\"\n          />\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PopupWindow;\n"]},"metadata":{},"sourceType":"module"}