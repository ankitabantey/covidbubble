{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ankita/Documents/GitHub/homies/src/components/Messages/index.js\";\nimport React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport EmojiMessage from './EmojiMessage';\nimport FileMessage from './FileMessage';\nimport chatIconUrl from \"./../../assets/chat-icon.svg\";\n\nclass Message extends Component {\n  _renderMessageOfType(type) {\n    switch (type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(TextMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this);\n\n      case 'emoji':\n        return /*#__PURE__*/_jsxDEV(EmojiMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }, this);\n\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(FileMessage, { ...this.props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n\n      default:\n        console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render() {\n    let contentClassList = ['sc-message--content', this.props.message.author === 'me' ? 'sent' : 'received'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sc-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: contentClassList.join(' '),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sc-message--avatar\",\n          style: {\n            backgroundImage: `url(${chatIconUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), this._renderMessageOfType(this.props.message.type)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Message;","map":{"version":3,"sources":["/Users/ankita/Documents/GitHub/homies/src/components/Messages/index.js"],"names":["React","Component","TextMessage","EmojiMessage","FileMessage","Message","_renderMessageOfType","type","props","message","console","error","render","contentClassList","author","join","backgroundImage","chatIconUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAIA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE9BK,EAAAA,oBAAoB,CAACC,IAAD,EAAO;AACzB,YAAOA,IAAP;AACA,WAAK,MAAL;AACE,4BAAO,QAAC,WAAD,OAAiB,KAAKC,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,OAAL;AACE,4BAAO,QAAC,YAAD,OAAkB,KAAKD,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,MAAL;AACE,4BAAO,QAAC,WAAD,OAAiB,KAAKD,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACEC,QAAAA,OAAO,CAACC,KAAR,CAAe,0DAAyDJ,IAAK,GAA7E;AARF;AAUD;;AAEDK,EAAAA,MAAM,GAAI;AACR,QAAIC,gBAAgB,GAAG,CACrB,qBADqB,EAEpB,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,MAAnB,KAA8B,IAA9B,GAAqC,MAArC,GAA8C,UAF1B,CAAvB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAED,gBAAgB,CAACE,IAAjB,CAAsB,GAAtB,CAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAoC,UAAA,KAAK,EAAE;AACzCC,YAAAA,eAAe,EAAG,OAAMC,WAAY;AADK;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,EAIG,KAAKX,oBAAL,CAA0B,KAAKE,KAAL,CAAWC,OAAX,CAAmBF,IAA7C,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA7B6B;;AAgChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport EmojiMessage from './EmojiMessage';\nimport FileMessage from './FileMessage';\nimport chatIconUrl from './../../assets/chat-icon.svg';\n\n\nclass Message extends Component {\n\n  _renderMessageOfType(type) {\n    switch(type) {\n    case 'text':\n      return <TextMessage {...this.props.message} />;\n    case 'emoji':\n      return <EmojiMessage {...this.props.message} />;\n    case 'file':\n      return <FileMessage {...this.props.message} />;\n    default:\n      console.error(`Attempting to load message with unsupported file type '${type}'`);\n    }\n  }\n\n  render () {\n    let contentClassList = [\n      'sc-message--content',\n      (this.props.message.author === 'me' ? 'sent' : 'received')\n    ];\n    return (\n      <div className=\"sc-message\">\n        <div className={contentClassList.join(' ')}>\n          <div className=\"sc-message--avatar\" style={{\n            backgroundImage: `url(${chatIconUrl})`\n          }}></div>\n          {this._renderMessageOfType(this.props.message.type)}\n        </div>\n      </div>);\n  }\n}\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}