{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ankita/Documents/GitHub/homies/src/components/UserInput.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SendIcon from './icons/SendIcon';\nimport FileIcon from './icons/FileIcon';\nimport EmojiIcon from './icons/EmojiIcon';\nimport PopupWindow from './popups/PopupWindow';\nimport EmojiPicker from './emoji-picker/EmojiPicker';\n\nclass UserInput extends Component {\n  constructor() {\n    super();\n\n    this.toggleEmojiPicker = e => {\n      e.preventDefault();\n\n      if (!this.state.emojiPickerIsOpen) {\n        this.setState({\n          emojiPickerIsOpen: true\n        });\n      }\n    };\n\n    this.closeEmojiPicker = e => {\n      if (this.emojiPickerButton.contains(e.target)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      this.setState({\n        emojiPickerIsOpen: false\n      });\n    };\n\n    this._handleEmojiPicked = emoji => {\n      this.setState({\n        emojiPickerIsOpen: false\n      });\n\n      if (this.state.inputHasText) {\n        this.userInput.innerHTML += emoji;\n      } else {\n        this.props.onSubmit({\n          author: 'me',\n          type: 'emoji',\n          data: {\n            emoji\n          }\n        });\n      }\n    };\n\n    this.handleEmojiFilterChange = event => {\n      const emojiFilter = event.target.value;\n      this.setState({\n        emojiFilter\n      });\n    };\n\n    this._renderEmojiPopup = () => /*#__PURE__*/_jsxDEV(PopupWindow, {\n      isOpen: this.state.emojiPickerIsOpen,\n      onClickedOutside: this.closeEmojiPicker,\n      onInputChange: this.handleEmojiFilterChange,\n      children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onEmojiPicked: this._handleEmojiPicked,\n        filter: this.state.emojiFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this);\n\n    this.state = {\n      inputActive: false,\n      inputHasText: false,\n      emojiPickerIsOpen: false,\n      emojiFilter: ''\n    };\n  }\n\n  componentDidMount() {\n    this.emojiPickerButton = document.querySelector('#sc-emoji-picker-button');\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      return this._submitText(event);\n    }\n  }\n\n  handleKeyUp(event) {\n    const inputHasText = event.target.innerHTML.length !== 0 && event.target.innerText !== '\\n';\n    this.setState({\n      inputHasText\n    });\n  }\n\n  _showFilePicker() {\n    this._fileUploadButton.click();\n  }\n\n  _submitText(event) {\n    event.preventDefault();\n    const text = this.userInput.textContent;\n\n    if (text && text.length > 0) {\n      this.props.onSubmit({\n        author: 'me',\n        type: 'text',\n        data: {\n          text\n        }\n      });\n      this.userInput.innerHTML = '';\n    }\n  }\n\n  _onFilesSelected(event) {\n    if (event.target.files && event.target.files.length > 0) {\n      this.props.onFilesSelected(event.target.files);\n    }\n  }\n\n  _renderSendOrFileIcon() {\n    if (this.state.inputHasText) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sc-user-input--button\",\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {\n          onClick: this._submitText.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sc-user-input--button\",\n      children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n        onClick: this._showFilePicker.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"files[]\",\n        multiple: true,\n        ref: e => {\n          this._fileUploadButton = e;\n        },\n        onChange: this._onFilesSelected.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      emojiPickerIsOpen,\n      inputActive\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `sc-user-input ${inputActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"button\",\n        tabIndex: \"0\",\n        onFocus: () => {\n          this.setState({\n            inputActive: true\n          });\n        },\n        onBlur: () => {\n          this.setState({\n            inputActive: false\n          });\n        },\n        ref: e => {\n          this.userInput = e;\n        },\n        onKeyDown: this.handleKeyDown.bind(this),\n        onKeyUp: this.handleKeyUp.bind(this),\n        contentEditable: \"true\",\n        placeholder: \"Write a reply...\",\n        className: \"sc-user-input--text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sc-user-input--buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sc-user-input--button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sc-user-input--button\",\n          children: this.props.showEmoji && /*#__PURE__*/_jsxDEV(EmojiIcon, {\n            onClick: this.toggleEmojiPicker,\n            isActive: emojiPickerIsOpen,\n            tooltip: this._renderEmojiPopup()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), this._renderSendOrFileIcon()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nUserInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onFilesSelected: PropTypes.func.isRequired,\n  showEmoji: PropTypes.bool\n};\nexport default UserInput;","map":{"version":3,"sources":["/Users/ankita/Documents/GitHub/homies/src/components/UserInput.js"],"names":["PropTypes","React","Component","SendIcon","FileIcon","EmojiIcon","PopupWindow","EmojiPicker","UserInput","constructor","toggleEmojiPicker","e","preventDefault","state","emojiPickerIsOpen","setState","closeEmojiPicker","emojiPickerButton","contains","target","stopPropagation","_handleEmojiPicked","emoji","inputHasText","userInput","innerHTML","props","onSubmit","author","type","data","handleEmojiFilterChange","event","emojiFilter","value","_renderEmojiPopup","inputActive","componentDidMount","document","querySelector","handleKeyDown","keyCode","shiftKey","_submitText","handleKeyUp","length","innerText","_showFilePicker","_fileUploadButton","click","text","textContent","_onFilesSelected","files","onFilesSelected","_renderSendOrFileIcon","bind","render","showEmoji","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SendIcon from './icons/SendIcon';\nimport FileIcon from './icons/FileIcon';\nimport EmojiIcon from './icons/EmojiIcon';\nimport PopupWindow from './popups/PopupWindow';\nimport EmojiPicker from './emoji-picker/EmojiPicker';\n\n\nclass UserInput extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      inputActive: false,\n      inputHasText: false,\n      emojiPickerIsOpen: false,\n      emojiFilter: ''\n    };\n  }\n\n  componentDidMount() {\n    this.emojiPickerButton = document.querySelector('#sc-emoji-picker-button');\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      return this._submitText(event);\n    }\n  }\n\n  handleKeyUp(event) {\n    const inputHasText = event.target.innerHTML.length !== 0 &&\n      event.target.innerText !== '\\n';\n    this.setState({ inputHasText });\n  }\n\n  _showFilePicker() {\n    this._fileUploadButton.click();\n  }\n\n  toggleEmojiPicker = (e) => {\n    e.preventDefault();\n    if (!this.state.emojiPickerIsOpen) {\n      this.setState({ emojiPickerIsOpen: true });\n    }\n  }\n\n  closeEmojiPicker = (e) => {\n    if (this.emojiPickerButton.contains(e.target)) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.setState({ emojiPickerIsOpen: false });\n  }\n\n  _submitText(event) {\n    event.preventDefault();\n    const text = this.userInput.textContent;\n    if (text && text.length > 0) {\n      this.props.onSubmit({\n        author: 'me',\n        type: 'text',\n        data: { text }\n      });\n      this.userInput.innerHTML = '';\n    }\n  }\n\n  _onFilesSelected(event) {\n    if (event.target.files && event.target.files.length > 0) {\n      this.props.onFilesSelected(event.target.files);\n    }\n  }\n\n  _handleEmojiPicked = (emoji) => {\n    this.setState({ emojiPickerIsOpen: false });\n    if(this.state.inputHasText) {\n      this.userInput.innerHTML += emoji;\n    } else {\n      this.props.onSubmit({\n        author: 'me',\n        type: 'emoji',\n        data: { emoji }\n      });\n    }\n  }\n\n  handleEmojiFilterChange = (event) => {\n    const emojiFilter = event.target.value;\n    this.setState({ emojiFilter });\n  }\n\n  _renderEmojiPopup = () => (\n    <PopupWindow\n      isOpen={this.state.emojiPickerIsOpen}\n      onClickedOutside={this.closeEmojiPicker}\n      onInputChange={this.handleEmojiFilterChange}\n    >\n      <EmojiPicker\n        onEmojiPicked={this._handleEmojiPicked}\n        filter={this.state.emojiFilter}\n      />\n    </PopupWindow>\n  )\n\n  _renderSendOrFileIcon() {\n    if (this.state.inputHasText) {\n      return (\n        <div className=\"sc-user-input--button\">\n          <SendIcon onClick={this._submitText.bind(this)} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"sc-user-input--button\">\n        <FileIcon onClick={this._showFilePicker.bind(this)} />\n        <input\n          type=\"file\"\n          name=\"files[]\"\n          multiple\n          ref={(e) => { this._fileUploadButton = e; }}\n          onChange={this._onFilesSelected.bind(this)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { emojiPickerIsOpen, inputActive } = this.state;\n    return (\n      <form className={`sc-user-input ${(inputActive ? 'active' : '')}`}>\n        <div\n          role=\"button\"\n          tabIndex=\"0\"\n          onFocus={() => { this.setState({ inputActive: true }); }}\n          onBlur={() => { this.setState({ inputActive: false }); }}\n          ref={(e) => { this.userInput = e; }}\n          onKeyDown={this.handleKeyDown.bind(this)}\n          onKeyUp={this.handleKeyUp.bind(this)}\n          contentEditable=\"true\"\n          placeholder=\"Write a reply...\"\n          className=\"sc-user-input--text\"\n        >\n        </div>\n        <div className=\"sc-user-input--buttons\">\n          <div className=\"sc-user-input--button\"></div>\n          <div className=\"sc-user-input--button\">\n            {this.props.showEmoji && <EmojiIcon\n              onClick={this.toggleEmojiPicker}\n              isActive={emojiPickerIsOpen}\n              tooltip={this._renderEmojiPopup()}\n            />}\n          </div>\n          {this._renderSendOrFileIcon()}\n        </div>\n      </form>\n    );\n  }\n}\n\nUserInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onFilesSelected: PropTypes.func.isRequired,\n  showEmoji: PropTypes.bool\n};\n\nexport default UserInput;\n"]},"metadata":{},"sourceType":"module"}